x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
    
  environment:
    &airflow-common-env
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__STORE_SERIALIZED_DAGS: 'true'
    AIRFLOW__CORE__TEST_CONNECTION: Enabled
    AIRFLOW__CORE__ALLOWED_DESERIALIZATION_CLASSES: airflow.*
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 5
    AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 5
    AIRFLOW__WEBSERVER__SECRET_KEY: secret
    AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER: 'http://localhost:8793'
  volumes:
    - ./dags:/opt/airflow/dags/mount/repo/dags
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    postgres-airflow:
      condition: service_healthy

services:
  postgres-airflow:
    image: postgres:17
    ports:
      - "5445:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-af-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-standalone:
    <<: *airflow-common
    ports:
      - "8080:8080"
    command: standalone
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"] #webserver
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    mem_reservation: "500M"
    mem_limit: "3G"
    depends_on:
      <<: *airflow-common-depends-on

  airflow-init:
    <<: *airflow-common
    # yamllint disable rule:line-length
    command:
      - bash
      - -c
      - |
        airflow db init
        airflow db migrate
        airflow users create \
          -e airflow@example.com \
          -f airflow \
          -l airflow \
          -r Admin \
          -u airflow \
          -p airflow
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}

        echo "Airflow version"
        airflow version
        airflow connections delete 'postgres_default' || true
        airflow connections add 'postgres_default' \
          --conn-type 'postgres' \
          --conn-login 'postgres' \
          --conn-password 'postgres' \
          --conn-host 'postgres' \
          --conn-schema 'public' \
          --conn-port '5444'
    # yamllint enable rule:line-length
    user: "0:0"
    volumes:
      - .:/sources

  postgres:
    image: postgres:17
    ports:
      - "5444:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

volumes:
  postgres-af-volume:
  postgres-db-volume: